CREATE TYPE USERROLES AS ENUM ('user', 'mod','admin');
CREATE TYPE USERLEVELS AS ENUM ('wood', 'copper','bronze','iron', 'steel', 'silver', 'gold', 'mithril');
CREATE TYPE USERFLAIRS AS ENUM ('none', 'Recognised', 'Distinguished', 'Eminent');
CREATE TYPE POSTCATEGORIES AS ENUM ('offbeat','meta', 'science&nature', 'world&business' 'lifestyle', 'entertainment', 'sports');


CREATE TABLE IF NOT EXISTS USERS (
    UNQID TEXT NOT NULL UNIQUE,
    USER_NICK TEXT,
    USER_THUMB TEXT,
    USER_FLAIR USERFLAIRS DEFAULT 'none',
    USER_ROLE USERROLES DEFAULT 'user',
    USER_LEVEL USERLEVELS DEFAULT 'wood',
    USER_STARS INT DEFAULT 1,
    IS_DELETED BOOL DEFAULT FALSE,
    WARNED_TILL TIMESTAMP,
    BANNED_TILL TIMESTAMP,
    WARNED_COUNT INT DEFAULT 0,
    BANNED_COUNT INT DEFAULT 0,
    WARNED_AT TIMESTAMP,
    BANNED_AT TIMESTAMP,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE TABLE IF NOT EXISTS AUTH_BASIC (
    USER_ID TEXT REFERENCES USERS(UNQID),
    USER_EMAIL TEXT NOT NULL UNIQUE,
    USER_PASSWORD TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS AUTH_GOOGLE (
    USER_GOOGLE_ID TEXT NOT NULL UNIQUE,
    REFRESH_TOKEN TEXT NOT NULL,
    REFRESHED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
);

CREATE TABLE IF NOT EXISTS AUTH_FACEBOOK (
    USER_FACEBOOK_ID TEXT NOT NULL UNIQUE,
);
CREATE TABLE IF NOT EXISTS AUTH_GITHUB (
    USER_GITHUB_ID TEXT NOT NULL UNIQUE,
);


CREATE TABLE IF NOT EXISTS SESSIONS (
    UNQID TEXT NOT NULL UNIQUE,
    USER_ID TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_USED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP,
    EXPIRES_AT TIMESTAMP
);

CREATE TABLE IF NOT EXISTS POSTS (
    UNQID TEXT NOT NULL UNIQUE,
    TITLE TEXT CONSTRAINT TITLE_VALIDATE CHECK (CHAR_LENGTH(TITLE) <= 255),
    LINK TEXT,
    THUMB TEXT,
    CONTENT TEXT,
    LIKES INT DEFAULT 1,
    TAGS JSONB,
    USER_ID TEXT REFERENCES USERS(UNQID),
    USER_NICK TEXT,
    USER_FLAIR TEXT,
    IS_DELETED BOOL DEFAULT FALSE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE TABLE IF NOT EXISTS ALLOWED_TAGS (
    UNQID TEXT NOT NULL UNIQUE,
    NAME TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE TABLE IF NOT EXISTS COMMENTS(
    UNQID TEXT PRIMARY KEY,
    POST_ID TEXT,
    PARENT_ID TEXT,
    CONTENT TEXT,
    LIKES INT DEFAULT 1,
    USER_ID TEXT NOT NULL,
    USER_NICK TEXT,
    USER_FLAIR TEXT,
    IS_DELETED BOOL DEFAULT FALSE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);

CREATE TYPE VOTETYPE AS ENUM ('up','none','down');

CREATE TABLE IF NOT EXISTS TAGS (
    NAME TEXT NOT NULL,
    POST_ID TEXT NOT NULL,
    USER_ID TEXT NOT NULL,
    VOTED VOTETYPE NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP
);


CREATE TABLE IF NOT EXISTS LIKE_POSTS (
    POST_ID TEXT NOT NULL,
    USER_ID TEXT NOT NULL,
    VOTED BOOL NOT NULL DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP,
    CONSTRAINT "unique_user_and_post_combo" PRIMARY KEY (POST_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS LIKE_COMMENTS (
    POST_ID TEXT NOT NULL,
    COMMENT_ID TEXT NOT NULL,
    USER_ID TEXT NOT NULL,
    VOTED BOOL NOT NULL DEFAULT TRUE,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP,
    CONSTRAINT "unique_user_and_comment_combo" PRIMARY KEY (COMMENT_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS REPORT_POSTS (
    POST_ID TEXT NOT NULL,
    USER_ID TEXT NOT NULL,
    REASON TEXT NOT NULL,
    DETAILS TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP,
    CONSTRAINT "unique_user_and_post_combo_for_reports" PRIMARY KEY (POST_ID, USER_ID)
);

CREATE TABLE IF NOT EXISTS REPORT_COMMENTS (
    COMMENT_ID TEXT NOT NULL,
    USER_ID TEXT NOT NULL,
    REASON TEXT NOT NULL,
    DETAILS TEXT NOT NULL,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DELETED_AT TIMESTAMP,
    CONSTRAINT "unique_user_and_comment_combo_for_reports" PRIMARY KEY (COMMENT_ID, USER_ID)
);

-- CREATE TABLE IF NOT EXISTS FLAG_POSTS (
--     POST_ID TEXT NOT NULL,
--     COMMENT_ID TEXT NOT NULL,
--     USER_ID TEXT NOT NULL,
--     CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     DELETED_AT TIMESTAMP
-- );
-- CREATE TABLE IF NOT EXISTS FLAG_COMMENTS (
--     POST_ID TEXT NOT NULL,
--     COMMENT_ID TEXT NOT NULL,
--     USER_ID TEXT NOT NULL,
--     CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     DELETED_AT TIMESTAMP
-- );

-- CREATE TABLE IF NOT EXISTS POSTS (
--     UNQID TEXT NOT NULL UNIQUE,
--     TITLE TEXT NOT NULL,
--     LINK TEXT,
--     THUMB TEXT,
--     CONTENT TEXT,
--     LIKED_COUNT INT DEFAULT 1,
--     TAGS JSONB,
--     COMMENTS JSONB,
--     USER_ID TEXT NOT NULL,
--     USER_NICK TEXT,
--     USER_FLAIR TEXT DEFAULT 'Silly Goose',
--     IS_DELETED BOOL DEFAULT FALSE,
--     CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     DELETED_AT TIMESTAMP
-- );